# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - rag-chatbot-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Load environment variables
        run: |
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "CNN_RSS_URL=${{ secrets.CNN_RSS_URL }}" >> $GITHUB_ENV
          echo "NDTV_RSS_URL=${{ secrets.NDTV_RSS_URL }}" >> $GITHUB_ENV
          echo "JINA_API_KEY=${{ secrets.JINA_API_KEY }}" >> $GITHUB_ENV
          echo "JINA_API_URL=${{ secrets.JINA_API_URL }}" >> $GITHUB_ENV
          echo "JINA_API_MODEL=${{ secrets.JINA_API_MODEL }}" >> $GITHUB_ENV
          echo "QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}" >> $GITHUB_ENV
          echo "QDRANT_API_URL=${{ secrets.QDRANT_API_URL }}" >> $GITHUB_ENV
          echo "QDRANT_PORT=${{ secrets.QDRANT_PORT }}" >> $GITHUB_ENV
          echo "QDRANT_DB_CLUSTER=${{ secrets.QDRANT_DB_CLUSTER }}" >> $GITHUB_ENV
          echo "QDRANT_DB_NAME=${{ secrets.QDRANT_DB_NAME }}" >> $GITHUB_ENV
          echo "REDIS_ENDPOINT=${{ secrets.REDIS_ENDPOINT }}" >> $GITHUB_ENV
          echo "REDIS_DATABASE_NAME=${{ secrets.REDIS_DATABASE_NAME }}" >> $GITHUB_ENV
          echo "REDIS_DATABASE_USERNAME=${{ secrets.REDIS_DATABASE_USERNAME }}" >> $GITHUB_ENV
          echo "REDIS_DATABASE_PASSWORD=${{ secrets.REDIS_DATABASE_PASSWORD }}" >> $GITHUB_ENV
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV
          echo "GEMINI_API_URL=${{ secrets.GEMINI_API_URL }}" >> $GITHUB_ENV

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EACE33AB0B3044B9A9B17B6345C37D8C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_486345E81927403C886668FF16D75420 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8E6BCBE634464FD5A9C530B5DBF86661 }}

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "rag-chatbot-backend"
          slot-name: "Production"
          package: .
